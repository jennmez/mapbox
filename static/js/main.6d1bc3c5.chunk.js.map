{"version":3,"sources":["App.js","index.js"],"names":["mapboxgl","accessToken","App","props","state","lng","lat","zoom","map","Map","container","this","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","className","ref","el","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAIAA,IAASC,YACP,4F,IAuCaC,E,kDApCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,UACNC,IAAK,UACLC,KAAM,IALS,E,gEAQE,IAAD,OACZC,EAAM,IAAIR,IAASS,IAAI,CAC3BC,UAAWC,KAAKC,aAChBC,MAAO,qCACPC,OAAQ,CAACH,KAAKP,MAAMC,IAAKM,KAAKP,MAAME,KACpCC,KAAMI,KAAKP,MAAMG,OAGnBC,EAAIO,GAAG,QAAQ,WACb,EAAKC,SAAS,CAGZX,IAAKG,EAAIS,YAAYZ,IAAIa,QAAQ,GACjCZ,IAAKE,EAAIS,YAAYX,IAAIY,QAAQ,GAEjCX,KAAMC,EAAIW,QAAQA,UAAUD,QAAQ,W,+BAIhC,IAAD,OACP,OACE,yBAAKE,UAAU,OACb,yBAAKC,IAAK,SAACC,GAAD,OAAS,EAAKV,aAAeU,GAAKF,UAAU,sB,GA/B5CG,IAAMC,WCFxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6d1bc3c5.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/index.css';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoiamVubm1leiIsImEiOiJjazV3cGsxODYxeGtpM2ttcWZubDlzZG84In0.dId_CPazp07jO7R39YxC0w';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -87.623177,\n      lat: 41.881832,\n      zoom: 10,\n    };\n  }\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n    });\n\n    map.on('move', () => {\n      this.setState({\n        // getCenter(): a Mapbox GL JS method, to get the new longitude and latitude of the point at the center of the map.\n        // toFixed(), a JavaScript method, to truncate the resulting floating point number to the specified number of digits\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        // getZoom(), a Mapbox GL JS method, to determine the zoom level that the map is set to.\n        zoom: map.getZoom.getZoom().toFixed(10),\n      });\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div ref={(el) => (this.mapContainer = el)} className=\"mapContainer\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}